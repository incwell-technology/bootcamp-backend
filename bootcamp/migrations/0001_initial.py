# Generated by Django 2.1.3 on 2019-06-18 03:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('syllabus', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=99)),
                ('location', models.CharField(max_length=300)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('image', models.FileField(blank=True, upload_to='bootcamp/static/bootcamp/site-data/content-pictures')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=300)),
                ('lastName', models.CharField(max_length=300)),
                ('photo', models.FileField(upload_to='bootcamp/static/bootcamp/site-data/profile-pictures')),
                ('designation', models.CharField(max_length=300)),
                ('summary', models.TextField()),
                ('facebookUsername', models.CharField(max_length=800)),
                ('mediumUsername', models.CharField(max_length=800)),
                ('twitterUsername', models.CharField(max_length=800)),
                ('githubUsername', models.CharField(max_length=800)),
                ('linkedinUsername', models.CharField(max_length=800)),
                ('course', models.ManyToManyField(related_name='mentor_course', to='syllabus.Course')),
            ],
        ),
        migrations.CreateModel(
            name='MentorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(default='John', max_length=200)),
                ('lastName', models.CharField(default='Doe', max_length=200)),
                ('designation', models.CharField(default='John', max_length=300)),
                ('image', models.FileField(upload_to='bootcamp/static/bootcamp/site-data/team-pictures')),
            ],
        ),
        migrations.AddField(
            model_name='mentor',
            name='mentorCategory',
            field=models.ManyToManyField(related_name='mentor_category', to='bootcamp.MentorCategory'),
        ),
        migrations.AddField(
            model_name='mentor',
            name='skill',
            field=models.ManyToManyField(related_name='mentor_skills', to='bootcamp.Skill'),
        ),
        migrations.AddField(
            model_name='company',
            name='phone',
            field=models.ManyToManyField(related_name='company_phone', to='bootcamp.PhoneNumber'),
        ),
    ]
